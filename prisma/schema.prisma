// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId    String      @id     @map("userId")
  password  String           @map("password")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  userInfos UserInfos? //UserInfos 테이블 1:1 관계
  characters     Characters[] //Characters 테이블 1:N 관계
  itemInventory  ItemInventory[]
  @@map("Users")
}

model UserInfos {
  userInfoId   Int      @id @default(autoincrement()) @map("userInfoId")
  userId       String      @unique                       @map("userId") // 사용자(Users) 테이블을 참조하는 외래키
  name         String                                 @map("name")
  createdAt    DateTime @default(now()) @map("createdAt")
  updatedAt    DateTime @updatedAt @map("updatedAt")

  // Users 테이블에서 외래키 가져오기
  user Users @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@map("UserInfos")
}

model Characters{
  characterId Int @id @default(autoincrement()) @map("characterId")
  nickname String @unique @map("nickname")
  userId String @map("userId")
  health Int @default(500) @map("health")
  power Int @default(100) @map("power")
  money Int @default(10000) @map("money")

  // Users 테이블에서 외래키 가져오기
  user Users @relation(fields: [userId], references: [userId], onDelete : Cascade)
  item ItemInventory[] //Items 테이블 1:N 관계
  @@map("Characters")
}

model ItemInventory{
    ItemId      Int @id @default(autoincrement()) @map("ItemId")
    characterId Int                               @map("characterId")
    userId      String                            @map("userId")
    ItemName    String                            @map("ItemName")
    addhealth   Int                               @map("addhealth")
    addpower    Int                               @map("addpower")
    price       Int                               @map("price")

    // Characters 테이블에서 외래키 가져오기
    character Characters @relation(fields: [characterId], references: [characterId], onDelete : Cascade)
    // Users 테이블에서 외래키 가져오기
    user Users @relation(fields : [userId], references : [userId], onDelete : Cascade)

    @@map("ItemInventory")
}